From 4f47ba99f002d50e11c111b8625d81f79b2bf52f Mon Sep 17 00:00:00 2001
From: Nikita Popov <nikita.ppv@gmail.com>
Date: Tue, 19 May 2020 10:13:25 +0200
Subject: Fix bug #79603, by retrying on RTD key collision

This is a non-intrusive fix for 7.4, still trying to find a good
solution for master.

Closes GH-5597.

Bug: https://bugs.php.net/bug.php?id=79603
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/php7.4/+bug/1968228
Last-Update: 2022-05-05
Origin: backport, https://github.com/php/php-src/commit/4f47ba99f002d50e11c111b8625d81f79b2bf52f
---
 Zend/zend_compile.c | 34 ++++++++++++++++++++++------------
 2 files changed, 23 insertions(+), 12 deletions(-)

--- a/Zend/zend_compile.c
+++ b/Zend/zend_compile.c
@@ -5924,11 +5924,12 @@
 		return;
 	}
 
-	key = zend_build_runtime_definition_key(lcname, decl->start_lineno);
-	if (!zend_hash_add_ptr(CG(function_table), key, op_array)) {
-		zend_error_noreturn(E_ERROR,
-			"Runtime definition key collision for function %s. This is a bug", ZSTR_VAL(name));
-	}
+	/* Generate RTD keys until we find one that isn't in use yet. */
+	key = NULL;
+	do {
+		zend_tmp_string_release(key);
+		key = zend_build_runtime_definition_key(lcname, decl->start_lineno);
+	} while (!zend_hash_add_ptr(CG(function_table), key, op_array));
 
 	if (op_array->fn_flags & ZEND_ACC_CLOSURE) {
 		opline = zend_emit_op_tmp(result, ZEND_DECLARE_LAMBDA_FUNCTION, NULL, NULL);
@@ -6394,8 +6395,15 @@
 
 		zend_register_seen_symbol(lcname, ZEND_SYMBOL_CLASS);
 	} else {
-		name = zend_generate_anon_class_name(decl->start_lineno);
-		lcname = zend_string_tolower(name);
+		/* Find an anon class name that is not in use yet. */
+		name = NULL;
+		lcname = NULL;
+		do {
+			zend_tmp_string_release(name);
+			zend_tmp_string_release(lcname);
+			name = zend_generate_anon_class_name(decl->start_lineno);
+			lcname = zend_string_tolower(name);
+		} while (zend_hash_exists(CG(class_table), lcname));
 	}
 	lcname = zend_new_interned_string(lcname);
 
@@ -6552,18 +6560,20 @@
 		opline->result_type = IS_VAR;
 		opline->result.var = get_temporary_variable();
 		if (!zend_hash_add_ptr(CG(class_table), lcname, ce)) {
+			/* We checked above that the class name is not used. This really shouldn't happen. */
 			zend_error_noreturn(E_ERROR,
 				"Runtime definition key collision for %s. This is a bug", ZSTR_VAL(name));
 		}
 	} else {
-		zend_string *key = zend_build_runtime_definition_key(lcname, decl->start_lineno);
+		/* Generate RTD keys until we find one that isn't in use yet. */
+		zend_string *key = NULL;
+		do {
+			zend_tmp_string_release(key);
+			key = zend_build_runtime_definition_key(lcname, decl->start_lineno);
+		} while (!zend_hash_add_ptr(CG(class_table), key, ce));
 
 		/* RTD key is placed after lcname literal in op1 */
 		zend_add_literal_string(&key);
-		if (!zend_hash_add_ptr(CG(class_table), key, ce)) {
-			zend_error_noreturn(E_ERROR,
-				"Runtime definition key collision for class %s. This is a bug", ZSTR_VAL(name));
-		}
 
 		opline->opcode = ZEND_DECLARE_CLASS;
 		if (extends_ast && toplevel
